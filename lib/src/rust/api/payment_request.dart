// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `from_str`, `from`, `from`, `from`

class PaymentRequest {
  final String? paymentId;
  final BigInt? amount;
  final String? unit;
  final bool? singleUse;
  final List<String>? mints;
  final String? description;
  final List<Transport> transports;

  const PaymentRequest({
    this.paymentId,
    this.amount,
    this.unit,
    this.singleUse,
    this.mints,
    this.description,
    required this.transports,
  });

  @override
  int get hashCode =>
      paymentId.hashCode ^
      amount.hashCode ^
      unit.hashCode ^
      singleUse.hashCode ^
      mints.hashCode ^
      description.hashCode ^
      transports.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is PaymentRequest &&
          runtimeType == other.runtimeType &&
          paymentId == other.paymentId &&
          amount == other.amount &&
          unit == other.unit &&
          singleUse == other.singleUse &&
          mints == other.mints &&
          description == other.description &&
          transports == other.transports;
}

class Transport {
  final TransportType type;
  final String target;
  final List<List<String>>? tags;

  const Transport({
    required this.type,
    required this.target,
    this.tags,
  });

  @override
  int get hashCode => type.hashCode ^ target.hashCode ^ tags.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Transport &&
          runtimeType == other.runtimeType &&
          type == other.type &&
          target == other.target &&
          tags == other.tags;
}

enum TransportType {
  nostr,
  httpPost,
  ;
}
